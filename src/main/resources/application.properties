# Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/storytelling_db
spring.datasource.username=storyteller
spring.datasource.password=storyai
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# Flyway Configuration
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.validate-on-migrate=false
spring.flyway.user=storyteller
spring.flyway.password=storyai
spring.flyway.schemas=public

# Server Configuration
server.port=8080
server.servlet.context-path=/

# Security Configuration
# spring.autoconfigure.exclude = org.springframework.boot.autoconfigure.security.servlet.securityAutoConfiguration

# Logging Configuration
logging.level.org.springframework.web=DEBUG
logging.level.org.flywaydb=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Application Configuration
spring.application.name=storytelling-backend


# JWT Configuration

app.jwt.secret = 9nHWRhoJeuDbj09cd9TM5lJ6xPT9xqIwqAyvsmb3JMRC5N0NgvsPauWZSNIvkI0d+gnbwDsd1ptZwn6HLq4Stw==
app.jwt.expiration = 86400

# Swagger/OpenAPI Configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.filter=true
springdoc.swagger-ui.tryItOutEnabled=true

# Enable/Disable Swagger UI (set to false in production)
springdoc.swagger-ui.enabled=true



# ========================================
# AI PROVIDER CONFIGURATION
# ========================================

# Choose AI provider: "openai" or "claude"
ai.provider=openai

# ========================================
# OPENAI CONFIGURATION
# ========================================
# Get your API key from: https://platform.openai.com/api-keys
openai.api.key=${OPENAI_API_KEY:your-api-key-here}

# Available models: gpt-4, gpt-4-turbo-preview, gpt-3.5-turbo
openai.model=gpt-4

# Max tokens for response (higher = longer content, more cost)
openai.max.tokens=1000

# Temperature (0.0 = deterministic, 1.0 = creative)
openai.temperature=0.7

# ========================================
# CLAUDE CONFIGURATION
# ========================================
# Get your API key from: https://console.anthropic.com/
claude.api.key=${CLAUDE_API_KEY:your-api-key-here}

# Available models: claude-sonnet-4-5-20250929, claude-opus-4-1, claude-4
claude.model=claude-sonnet-4-5-20250929

# Max tokens for response
claude.max.tokens=2000

# Temperature
claude.temperature=0.7

# ========================================
# CACHE CONFIGURATION
# ========================================
# How long to cache AI responses (in hours)
ai.cache.expiration.hours=168

# Enable/disable caching (true for production, false for testing)
ai.cache.enabled=true

# ========================================
# SCHEDULED TASKS
# ========================================
# Cron expression for cache cleanup (daily at 3 AM)
ai.cache.cleanup.cron=0 0 3 * * ?
